[project]
name = "{{cookiecutter.project_slug}}"
version = "{{cookiecutter.first_version}}"
description = "{{cookiecutter.description}}"
authors = [
    { name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}" }
]
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
#    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = []

[dependency-groups]
dev = [
    "bump-my-version>=1.2.1",
    "deptry>=0.23.0",
    "mypy>=1.17.0",
    "poethepoet>=0.36.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.4",
]

[project.urls]
source = "https://github.com/{{__gh_slug}}"
changelog = "https://github.com/{{__gh_slug}}/releases"
issues = "https://github.com/{{__gh_slug}}/issues"

[build-system]
requires = ["uv_build>=0.8.3,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "{{cookiecutter.module_name}}"
module-root = "src"

[tool.poe.tasks]
_deptry = "deptry ."
_format = "ruff format"
_lint = "ruff check --fix"
_types = "mypy ."
bump = "bump-my-version bump"
pc = "pre-commit run --all-files"
ruff = ["_lint", "_format"]
check = ["ruff", "_types", "_deptry"]

[tool.ruff]
preview = true

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"
quote-style = "single"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "CPY",     # Checks for a file-level copyright statement.
    "COM812",  # Checks for the absence of trailing commas. Not recommended with formatter.
    "COM819",  # Checks for prohibited trailing commas. Not recommended with formatter.
    "FIX002",  # Checks for to-do comments.
]
pydocstyle.convention = "google"
flake8-quotes.inline-quotes = "single"
flake8-tidy-imports.ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"*_test.py" = [
    "INP",     # Checks for packages missing an __init__.py file.
    "PLC2701", # Checks for private name imports.
    "PLR2004", # Checks for "magic" values.
    "S101",    # Checks for the use of assert statements.
]

[tool.mypy]
strict = true
